{"version":3,"sources":["components/weather.jsx","components/form.jsx","App.js","reportWebVitals.js","index.js"],"names":["IconShow","n","size","color","Weather","props","className","city","country","icon","celsius","min","max","description","error","Form","onSubmit","e","loadweather","type","placeholder","name","autoComplete","App","getWeather","a","preventDefault","target","value","fetch","api_call","json","resp","console","log","setState","sys","Math","floor","main","temp","temp_max","temp_min","weather","id","state","undefined","this","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.104e34f4.chunk.js","sourcesContent":["import React from 'react';\nimport '../App.css'\nimport { WiDaySunny, WiDayThunderstorm, WiRain, WiRaindrops, WiSnow, WiCloudy } from 'weather-icons-react';\nconst Weather = (props) => {\n    return (\n        <div className=\"container\">\n            <div className=\"center\">\n                <h1>{props.city}, {props.country}</h1>\n                {IconShow(props.icon)}\n\n                <h3>{props.celsius}&deg;</h3>\n                {MinMaxTemp(props.min, props.max)}\n                <h4>{props.description}</h4>\n            </div>\n        </div>\n    )\n}\nfunction IconShow(n) {\n    if (n >= 200 && n <= 232) {\n        return <WiDayThunderstorm size={100} color='#000' />\n    }\n    else if (n >= 300 && n <= 321) {\n        return <WiRaindrops size={100} color='#000' />\n    }\n    else if (n >= 500 && n <= 531) {\n        return <WiRain size={100} color='#000' />\n    }\n    else if (n >= 600 && n <= 622) {\n        return <WiSnow size={100} color='#000' />\n    }\n    else if (n == 800) {\n        return <WiDaySunny size={100} color='#000' />\n    }\n    else{\n        return <WiCloudy size={100} color='#000' />\n    }\n}\nfunction MinMaxTemp(min, max) {\n    return (\n\n        <div className=\"center\">\n            <h3>{min}&deg; {max}&deg;</h3>\n\n        </div>\n    )\n}\nexport default Weather","import React from 'react';\n\nconst Form = (props) => {\n    return (\n        <div className=\"container\">\n        <div>{props.error?error:null}</div>\n        <form onSubmit={e => props.loadweather(e)}>\n            <div className=\"row\">\n                <div className=\"input-field col m3\">\n                    <input type='text' placeholder='City' name='city' autoComplete=\"off\" />\n                </div>\n                <div className=\"input-field col m3\">\n                    <input type='text' placeholder='Country' name='country' autoComplete=\"off\" /></div>\n                <div className=\"col m3\">\n                    <button className='input-field waves-effect blue btn'>Get Weather</button>\n                </div>\n            </div>\n            </form>\n        </div>\n    )\n}\nfunction error()\n{\n    return(\n        <div className='alert alert-danger red'>\n            Please enter correct city and country!\n        </div>\n    )\n}\nexport default Form;","import Weather from './components/weather'\nimport './App.css';\nimport Form from './components/form';\nimport React from 'react';\nconst APIkey = \"f2683eb6cc65be3cdfca83ee2d73e421\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      city: undefined,\n      country: undefined,\n      icon: undefined,\n      main: undefined,\n      celsius: undefined,\n      max: undefined,\n      min: undefined,\n      error: false,\n    };\n    this.getWeather();\n\n  }\n\n  getWeather = async e => {\n    e.preventDefault();\n    if (e.target.city.value && e.target.country.value) {\n      let city = e.target.city.value;\n      let country = e.target.country.value;\n      const api_call = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${APIkey}`);\n      const resp = await api_call.json();\n      console.log(resp);\n      this.setState({\n        city: resp.name,\n        country: resp.sys.country,\n        celsius: Math.floor(resp.main.temp - 273.16),\n        max: Math.floor(resp.main.temp_max - 273.16),\n        min: Math.floor(resp.main.temp_min - 273.16),\n        description: resp.weather[0].description,\n        icon: resp.weather[0].id,\n      });\n    }\n    else {\n      this.setState({ error: true });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Form loadweather={this.getWeather} error={this.state.error} />\n        <Weather city={this.state.city} country={this.state.country} celsius={this.state.celsius} max={this.state.max} icon={this.state.icon} min={this.state.min} description={this.state.description} />\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}